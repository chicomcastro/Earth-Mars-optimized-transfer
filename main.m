%% Main
% This script run all rotines needed to provide a minimal coust estimation
% for a Earth-Mars transfer throught a PSO algorithm paremeter optimization

%% Inputs
% Define optimization parameters
max_iteration = 1000;                                % Iteractions to run
num_particles = 100;                                % Particles in swarm
lower_boundary = [0 0 0 0 0 0 0 0];                   % Lower boundary
upper_boundary = [2*pi 2*pi 2*pi 2*pi 30 365 30 2*pi];   % Upper boundary

%% Optimization
% Run optimization
tic
pso;
execution_time = toc;
disp("Elapsed time was " + execution_time + "seconds.")

%% Results
% Print bests results
disp("Best global values: ");
disp(best_global);
disp("Minimal coust found: " + custo(best_global) + " km/s");

%% Storage
% Create a table with the data and variable names to store
data_to_store = [
    custo(best_global), ...
    best_global(:)', ...
    hyperparams.num_particles, ...
    max_iteration, ...
    execution_time
];
T_to_append = array2table(...
    data_to_store, ...
    'VariableNames', ...
        { ...
        'total_coust', ...
        'theta_a', ...
        'theta_b', ...
        'theta_c', ...
        'theta_d', ...
        't_ab', ...
        't_bc', ...
        't_cd', ...
        'theta_rel', ...
        'num_particles', ...
        'max_iterations',...
        'execution_time'...
        } ...
);

output_file_name = 'results.txt';
if exist('T','var') == 1
    T = [T; T_to_append];
elseif exist(output_file_name, 'file') == 2
    T = readtable(output_file_name);
else
    T = T_to_append;
end

% Write data to text file
writetable(T, output_file_name);

%% Images
% call Plotter for x = best_global
